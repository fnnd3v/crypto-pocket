{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jachym\\\\Desktop\\\\crypto-pocket\\\\src\\\\views\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { Loading } from \"components/atoms/Loading/Loading\";\nimport { Title } from \"components/atoms/Title/Title\";\nimport { ViewWrapper } from \"components/atoms/ViewWrapper/ViewWrapper\";\nimport CoinDetails from \"components/molecules/CoinDetails/CoinDetails\";\nimport CoinHandler from \"components/molecules/CoinHandler/CoinHandler\";\nimport useModal from \"components/organisms/Modal/useModal\";\nimport { CryptoApiContext } from \"providers/CryptoApiProvider\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Wrapper = styled.div`\n  width: 95%;\n  height: 95%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  margin: 25px;\n  background-color: ${_ref => {\n  let {\n    theme\n  } = _ref;\n  return theme.colors.white;\n}};\n  padding: 10px 40px;\n  border-radius: 25px;\n  position: relative;\n`;\n_c = Wrapper;\nconst ContentWrapper = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 0;\n  right: 0;\n  bottom: 10%;\n  padding: 5px;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-direction: column;\n  overflow-y: scroll;\n`;\n_c2 = ContentWrapper;\n\nconst Dashboard = () => {\n  _s();\n\n  const {\n    coinsMarket,\n    getMarket,\n    getCoinValue\n  } = useContext(CryptoApiContext);\n  const [currentCoin, setCurrentCoin] = useState(null);\n  const {\n    Modal,\n    isOpen,\n    handleOpenModal,\n    handleCloseModal\n  } = useModal();\n  useEffect(() => {\n    getMarket();\n  }, []);\n\n  const handleCurrentCoin = async coinId => {\n    const coin = await getCoinValue(coinId);\n    setCurrentCoin(coin);\n    handleOpenModal();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      children: \" Dashboard \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentWrapper, {\n      children: coinsMarket.length > 1 ? coinsMarket.map(coin => /*#__PURE__*/_jsxDEV(CoinHandler, {\n        onClick: () => handleCurrentCoin(coin.id),\n        coin: coin\n      }, coin.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(Modal, {\n      handleClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(CoinDetails, {\n        currentCoin: currentCoin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"gmbDSq6mUOHrYKTzoOTwxZUciIs=\", false, function () {\n  return [useModal];\n});\n\n_c3 = Dashboard;\nexport default Dashboard;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"ContentWrapper\");\n$RefreshReg$(_c3, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/jachym/Desktop/crypto-pocket/src/views/Dashboard.js"],"names":["Loading","Title","ViewWrapper","CoinDetails","CoinHandler","useModal","CryptoApiContext","React","useContext","useEffect","useState","styled","Wrapper","div","theme","colors","white","ContentWrapper","Dashboard","coinsMarket","getMarket","getCoinValue","currentCoin","setCurrentCoin","Modal","isOpen","handleOpenModal","handleCloseModal","handleCurrentCoin","coinId","coin","length","map","id"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,kCAAxB;AACA,SAASC,KAAT,QAAsB,8BAAtB;AACA,SAASC,WAAT,QAA4B,0CAA5B;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,OAAO,GAAGD,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,SAAeA,KAAK,CAACC,MAAN,CAAaC,KAA5B;AAAA,CAAkC;AACxD;AACA;AACA;AACA,CAZA;KAAMJ,O;AAcN,MAAMK,cAAc,GAAGN,MAAM,CAACE,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMI,c;;AAeN,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAA2Cb,UAAU,CAACF,gBAAD,CAA3D;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM;AAAEc,IAAAA,KAAF;AAASC,IAAAA,MAAT;AAAiBC,IAAAA,eAAjB;AAAkCC,IAAAA;AAAlC,MAAuDtB,QAAQ,EAArE;AAEAI,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMQ,iBAAiB,GAAG,MAAOC,MAAP,IAAkB;AAC1C,UAAMC,IAAI,GAAG,MAAMT,YAAY,CAACQ,MAAD,CAA/B;AACAN,IAAAA,cAAc,CAACO,IAAD,CAAd;AACAJ,IAAAA,eAAe;AAChB,GAJD;;AAMA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AAAA,gBACGP,WAAW,CAACY,MAAZ,GAAqB,CAArB,GACCZ,WAAW,CAACa,GAAZ,CAAiBF,IAAD,iBACd,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,MAAMF,iBAAiB,CAACE,IAAI,CAACG,EAAN,CAA7C;AAAsE,QAAA,IAAI,EAAEH;AAA5E,SAA6DA,IAAI,CAACG,EAAlE;AAAA;AAAA;AAAA;AAAA,cADF,CADD,gBAKC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,YAFF,EAWGR,MAAM,gBACL,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEE,gBAApB;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,WAAW,EAAEL;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,GAIH,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAlCD;;GAAMJ,S;UAGyDb,Q;;;MAHzDa,S;AAoCN,eAAeA,SAAf","sourcesContent":["import { Loading } from \"components/atoms/Loading/Loading\";\r\nimport { Title } from \"components/atoms/Title/Title\";\r\nimport { ViewWrapper } from \"components/atoms/ViewWrapper/ViewWrapper\";\r\nimport CoinDetails from \"components/molecules/CoinDetails/CoinDetails\";\r\nimport CoinHandler from \"components/molecules/CoinHandler/CoinHandler\";\r\nimport useModal from \"components/organisms/Modal/useModal\";\r\nimport { CryptoApiContext } from \"providers/CryptoApiProvider\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  width: 95%;\r\n  height: 95%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  margin: 25px;\r\n  background-color: ${({ theme }) => theme.colors.white};\r\n  padding: 10px 40px;\r\n  border-radius: 25px;\r\n  position: relative;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 10%;\r\n  padding: 5px;\r\n\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nconst Dashboard = () => {\r\n  const { coinsMarket, getMarket, getCoinValue } = useContext(CryptoApiContext);\r\n  const [currentCoin, setCurrentCoin] = useState(null);\r\n  const { Modal, isOpen, handleOpenModal, handleCloseModal } = useModal();\r\n\r\n  useEffect(() => {\r\n    getMarket();\r\n  }, []);\r\n\r\n  const handleCurrentCoin = async (coinId) => {\r\n    const coin = await getCoinValue(coinId);\r\n    setCurrentCoin(coin);\r\n    handleOpenModal();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title> Dashboard </Title>\r\n      <ContentWrapper>\r\n        {coinsMarket.length > 1 ? (\r\n          coinsMarket.map((coin) => (\r\n            <CoinHandler onClick={() => handleCurrentCoin(coin.id)} key={coin.id} coin={coin} />\r\n          ))\r\n        ) : (\r\n          <Loading />\r\n        )}\r\n      </ContentWrapper>\r\n      {isOpen ? (\r\n        <Modal handleClose={handleCloseModal}>\r\n          <CoinDetails currentCoin={currentCoin} />\r\n        </Modal>\r\n      ) : null}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}