{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jachym\\\\Desktop\\\\crypto-pocket\\\\src\\\\providers\\\\CryptoApiProvider.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CryptoApiContext = /*#__PURE__*/React.createContext();\n\nconst CryptoApiProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [articles, setArticles] = useState([]);\n  let articleArr = [];\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(CryptoApiContext.Provider, {\n    value: {\n      articles,\n      getNews,\n      articles\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CryptoApiProvider, \"XsOpLvUbTkfx79dw07TVNsBviNQ=\");\n\n_c = CryptoApiProvider;\nexport default CryptoApiProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CryptoApiProvider\");","map":{"version":3,"sources":["C:/Users/jachym/Desktop/crypto-pocket/src/providers/CryptoApiProvider.js"],"names":["axios","React","useState","CryptoApiContext","createContext","CryptoApiProvider","children","articles","setArticles","articleArr","useEffect","getNews"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,OAAO,MAAMC,gBAAgB,gBAAGF,KAAK,CAACG,aAAN,EAAzB;;AAEP,MAAMC,iBAAiB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AAEA,MAAIO,UAAU,GAAG,EAAjB;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT;AAOA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEH,MAAAA,QAAF;AAAYI,MAAAA,OAAZ;AAAqBJ,MAAAA;AAArB,KAAlC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBD;;GAAMD,iB;;KAAAA,iB;AAmBN,eAAeA,iBAAf","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const CryptoApiContext = React.createContext();\r\n\r\nconst CryptoApiProvider = ({ children }) => {\r\n  const [articles, setArticles] = useState([]);\r\n\r\n  let articleArr = [];\r\n\r\n  useEffect(() => {\r\n\r\n  }, [])\r\n  \r\n\r\n  \r\n\r\n  return (\r\n    <CryptoApiContext.Provider value={{ articles, getNews, articles }}>\r\n      {children}\r\n    </CryptoApiContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CryptoApiProvider;\r\n"]},"metadata":{},"sourceType":"module"}